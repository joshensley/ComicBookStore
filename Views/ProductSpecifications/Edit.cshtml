@model ComicBookStore.Repositories.DTO.ProductTypeWithProductSpecificationsDTO
@{
    ViewData["Title"] = "Edit";

    int count = 0;
}

<h1>Edit @Model.ProductTypeName</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @for (int i = 0; i < Model.ProductSpecifications.Count(); i++)
            {
                <div class="form-group">
                    <input type="text"
                           id=@($"ProductSpecification_{i}__Value")
                           name=@($"ProductSpecification[{i}].Name")
                           value="@Model.ProductSpecifications.ToList()[i].Name"
                           class="form-control" />
                    <input type="hidden"
                           id=@($"ProductSpecification_{i}__Value")
                           name=@($"ProductSpecification[{i}].ProductTypeID")
                           value="@Model.ProductTypeID" ) />
                    <input type="hidden"
                           id=@($"ProductSpecification_{i}__Value")
                           name=@($"ProductSpecification[{i}].ID")
                           value="@Model.ProductSpecifications.ToList()[i].ID" />
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}