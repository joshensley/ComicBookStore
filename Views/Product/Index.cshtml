@using ComicBookStore.Utility
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model PaginatedList<ComicBookStore.Repositories.DTO.ProductDTO>
@{
    ViewData["Title"] = "Index";

    var userId = "";
    @if (SignInManager.IsSignedIn(User))
    {
        userId = (await UserManager.GetUserAsync(User)).Id;
    }
}

<div class="row justify-content-center">
    @foreach (var item in Model)
    {
        <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12">
            <div class="card mb-4 shadow-sm">
                <a @*asp-controller="Store" asp-action="Index" asp-route-id="@item.ID"*@>
                    @if (item.ProductImages.Count() > 0 || item.ProductImages == null)
                    {
                        <img class="card-img-top"
                             src="@(item.ProductImages.First().ImageUrl)"
                             alt="Card image cap"
                             style="width: 100%; height: 250px; object-fit: cover;">
                    }
                    else
                    {
                        <img class="card-img-top"
                             src="~/images/defaultProductImage/gray.jpg"
                             alt="Card image cap"
                             style="width: 100%; height: 250px; object-fit: cover;">
                    }
                </a>

                <div class="card-body">
                    <div class="text-left">
                        <a @*asp-controller="Store" asp-action="Index" asp-route-id="@item.ID" style="color:black;"*@>
                            <h5 class="card-title">@(item.Name)</h5>
                        </a>
                        <h6 class="card-subtitle mb-2 text-muted">@(item.ProductTypeName)</h6>
                    </div>
                    <div class="text-right">
                        @if (item.InStock && SignInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <input hidden id="UserId" value="@(userId)" />
                                <button class="btn btn-primary" onclick=@(string.Format("AddToCart({0})", item.ID))>Add to Cart</button>
                                <br />
                                <small class="text-muted">Stock: @item.InventoryUnits</small>
                            </form>
                        }
                        else if (item.InStock)
                        {
                            <a class="btn btn-primary text-center" asp-area="Identity" asp-page="/Account/Login" asp-route-message="Login to add items to cart">
                                Add to Cart
                            </a>
                            <br />
                            <small class="text-muted">Stock: @item.InventoryUnits</small>
                        }
                        else
                        {
                            <button class="btn btn-danger text-center" disabled>Out of Stock</button>
                            <br />
                            <small class="text-muted">Stock: @item.InventoryUnits</small>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="row">
    <div class="col-9">
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-id="@Model[0].ProductTypeID"
                       asp-route-pageNumber="@(Model.PageIndex - 1)">
                        Previous
                    </a>
                </li>
                <li class="page-item @nextDisabled">
                    <a class="page-link "
                       asp-action="Index"
                       asp-route-id="@Model[0].ProductTypeID"
                       asp-route-pageNumber="@(Model.PageIndex + 1)">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-3 text-right">
        Page @Model.PageIndex of @Model.TotalPages
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function AddToCart(id) {
            event.preventDefault();

            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

            var data = {
                __RequestVerificationToken: antiForgeryToken,
                UserId: $('#UserId').val()
            }

            $.ajax({
                url: "/Product/AddToCart/" + id,
                type: "POST",
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                dataType: "json",
                data: data,
                success: function (result) {

                    // Displays the item count in user cart
                    var count = result.length;
                    $('#lblCartCount').html(count);

                    // Removes old item information and then displays the item information in dropdown
                    $('.product-item').remove();
                    $.each(result, function (key, value) {

                        var cartItemId = value.id;
                        var productName = value.product.name;
                        var quantity = value.quantity;
                        var regularPrice = value.product.regularPrice;
                        var totalPrice = regularPrice * quantity;

                        $('#cartItems').prepend(
                            `<li>
                                <a class="dropdown-item product-item id="cart-item-${cartItemId}"" href="#">
                                    ${productName}
                                    <br />
                                    <small>${quantity} Qty x $${regularPrice} | Total $${totalPrice}</small>
                                </a>
                            </li>`
                        );
                    });

                },
                error: function (errorMessage) {
                    alert(errorMessage.responseText);
                }
            });
        }
    </script>
}