@using ComicBookStore.Utility
@model PaginatedList<ComicBookStore.Repositories.DTO.ProductDTO>
@{
    ViewData["Title"] = "Index";
}

<div class="row justify-content-center">
    @foreach (var item in Model)
    {
        <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12">
            <div class="card mb-4 shadow-sm">
                <a @*asp-controller="Store" asp-action="Index" asp-route-id="@item.ID"*@>
                    @if (item.ProductImages.Count() > 0 || item.ProductImages == null)
                    {
                        <img class="card-img-top"
                             src="@(item.ProductImages.First().ImageUrl)"
                             alt="Card image cap"
                             style="width: 100%; height: 250px; object-fit: cover;">
                    }
                    else
                    {
                        <img class="card-img-top"
                             src="~/images/defaultProductImage/gray.jpg"
                             alt="Card image cap"
                             style="width: 100%; height: 250px; object-fit: cover;">
                    }
                </a>

                <div class="card-body">
                    <div class="text-left">
                        <a @*asp-controller="Store" asp-action="Index" asp-route-id="@item.ID" style="color:black;"*@>
                            <h5 class="card-title">@(item.Name)</h5>
                        </a>
                        <h6 class="card-subtitle mb-2 text-muted">@(item.ProductTypeName)</h6>
                    </div>
                    <div class="text-right">
                        @if (item.InStock)
                        {
                            <button class="btn btn-primary">Add to Cart</button>
                            <br />
                            <small class="text-muted">Stock: @item.InventoryUnits</small>
                        }
                        else
                        {
                            <button class="btn btn-danger text-center" disabled>Out of Stock</button>
                            <br />
                            <small class="text-muted">Stock: @item.InventoryUnits</small>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    

</div>

@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="row">
    <div class="col-9">
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-id="@Model[0].ProductTypeID"
                       asp-route-pageNumber="@(Model.PageIndex - 1)">
                        Previous
                    </a>
                </li>
                <li class="page-item @nextDisabled">
                    <a class="page-link "
                       asp-action="Index"
                       asp-route-id="@Model[0].ProductTypeID"
                       asp-route-pageNumber="@(Model.PageIndex + 1)">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-3 text-right">
        Page @Model.PageIndex of @Model.TotalPages
    </div>
</div>




