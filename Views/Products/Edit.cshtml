@model ComicBookStore.Models.ViewModels.CreateProductViewModel
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" asp-route-id="@Model.ID">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="ProductTypeID" />
            <input type="hidden" asp-for="CategoryTypeID" />
            <input type="hidden" asp-for="CreatedAt" />
            <input type="hidden" asp-for="UpdatedAt" />

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RegularPrice" class="control-label"></label>
                <input asp-for="RegularPrice" class="form-control" />
                <span asp-validation-for="RegularPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DiscountPrice" class="control-label"></label>
                <input asp-for="DiscountPrice" class="form-control" />
                <span asp-validation-for="DiscountPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsActive" class="control-label"></label>
                <input asp-for="IsActive" class="form-control" />
                <span asp-validation-for="IsActive" class="text-danger"></span>
            </div>

            @* Need to iterate over the product specification name value *@
            @for (int i = 0; i < Model.ProductSpecificationNameValue.Count; i++)
            {
                <div class="form-group">
                    <label class="control-label">@Model.ProductSpecificationNameValue[i].Name</label>
                    <input type="text" asp-for="@Model.ProductSpecificationNameValue[i].Value" class="form-control" />
                    <input type="hidden" asp-for="@Model.ProductSpecificationNameValue[i].Name" value="@Model.ProductSpecificationNameValue[i].Name" class="form-control" />
                    <input type="hidden" asp-for="@Model.ProductSpecificationNameValue[i].ProductSpecificationID" value="@Model.ProductSpecificationNameValue[i].ProductSpecificationID" class="form-control" />
                    <input type="hidden" asp-for="@Model.ProductSpecificationNameValue[i].ProductSpecificationValueID" class="form-control" />
                    <span asp-validation-for="@Model.ProductSpecificationNameValue[i].Value" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}